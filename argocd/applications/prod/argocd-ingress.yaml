apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  annotations:
    # NGINX Configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # cert-manager Configuration
    cert-manager.io/cluster-issuer: letsencrypt-prod
    
    # External DNS Configuration
    external-dns.alpha.kubernetes.io/hostname: argocd.talentos.darey.io
    external-dns.alpha.kubernetes.io/manage: "true"
    
    # NGINX specific annotations for ArgoCD
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # Security headers
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384"
    
    # ArgoCD specific - removed GRPC annotation (ArgoCD UI uses HTTP)
  labels:
    app: argocd
    environment: prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - argocd.talentos.darey.io
      secretName: argocd-tls
  rules:
    - host: argocd.talentos.darey.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
