apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-ingress
  namespace: argocd
  annotations:
    # ALB Configuration
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    
    # ACM Certificate ARN
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-2:586794457112:certificate/8ab08b2b-7dcd-4a27-b932-92e165ac28f2
    
    # External DNS Configuration
    external-dns.alpha.kubernetes.io/hostname: argocd.talentos.darey.io
    external-dns.alpha.kubernetes.io/manage: "true"
    
    # Health Check
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    
    # Security
    alb.ingress.kubernetes.io/security-groups: auto
    
    # ArgoCD Specific - Handle gRPC
    alb.ingress.kubernetes.io/conditions.argocd-server: |
      [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]
    
    # Tags
    alb.ingress.kubernetes.io/tags: Environment=prod,Service=argocd,ManagedBy=ArgoCD
  labels:
    app: argocd-server
    environment: prod
spec:
  ingressClassName: alb
  rules:
  - host: argocd.talentos.darey.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 443

