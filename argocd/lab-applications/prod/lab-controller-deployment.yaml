# Lab Controller Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: lab-controller
  labels:
    name: lab-controller
    environment: prod
---
# Lab Controller Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lab-controller-sa
  namespace: lab-controller
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::586794457112:role/prod-lab-controller-ecr-role
  labels:
    app: lab-controller
    environment: prod
---
# Lab Controller RBAC
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: lab-controller-role
  labels:
    app: lab-controller
    environment: prod
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "secrets", "namespaces"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["cert-manager.io"]
    resources: ["certificates", "clusterissuers"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: lab-controller-binding
  labels:
    app: lab-controller
    environment: prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: lab-controller-role
subjects:
  - kind: ServiceAccount
    name: lab-controller-sa
    namespace: lab-controller
---
# Lab Controller Secret
apiVersion: v1
kind: Secret
metadata:
  name: ecr-secret
  namespace: lab-controller
  labels:
    app: lab-controller
    environment: prod
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyI1ODY3OTQ0NTcxMTIuZGtyLmVjci5ldS13ZXN0LTIuYW1hem9uYXdzLmNvbSI6eyJhdXRoIjoiWVdWaGRXVT0ifX19
---
# Lab Controller Service
apiVersion: v1
kind: Service
metadata:
  name: lab-controller
  namespace: lab-controller
  labels:
    app: lab-controller
    environment: prod
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: lab-controller
---
# Lab Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lab-controller
  namespace: lab-controller
  labels:
    app: lab-controller
    environment: prod
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lab-controller
  template:
    metadata:
      labels:
        app: lab-controller
        environment: prod
    spec:
      serviceAccountName: lab-controller-sa
      imagePullSecrets:
        - name: ecr-secret
      containers:
        - name: lab-controller
          image: 586794457112.dkr.ecr.eu-west-2.amazonaws.com/dareyioinfra/lab-controller:latest
          ports:
            - containerPort: 80
          env:
            - name: REDIS_HOST
              value: "redis.lab-controller.svc.cluster.local"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_DB
              value: "0"
            - name: REDIS_PASSWORD
              value: ""
            - name: LAB_BASE_URL
              value: "https://projectlabs-api.talentos.darey.io"
            - name: WILDCARD_TLS_SECRET_NAME
              value: "wildcard-projectlabs-api-talentos-darey-io"
            - name: ENABLE_LAB_PASSWORD
              value: "true"
            - name: LAB_TYPES_PATH
              value: "/app/lab-types"
            - name: APP_VERSION: latest
              value: "1.0.0"
            - name: GIT_COMMIT: latest
              value: "latest"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health/live
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
